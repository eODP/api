"""add_data_source

Revision ID: 3a1e01f96c2c
Revises: 8da23b838743
Create Date: 2020-05-15 07:53:23.989727

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3a1e01f96c2c'
down_revision = '8da23b838743'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('samples_v2')
    op.add_column('cores', sa.Column('data_source_notes', sa.Text(), nullable=True))
    op.add_column('cores', sa.Column('data_source_url', sa.String(), nullable=True))
    op.add_column('holes', sa.Column('data_source_notes', sa.Text(), nullable=True))
    op.add_column('holes', sa.Column('data_source_url', sa.String(), nullable=True))
    op.add_column('samples', sa.Column('data_source_notes', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('data_source_url', sa.String(), nullable=True))
    op.add_column('sections', sa.Column('data_source_notes', sa.Text(), nullable=True))
    op.add_column('sections', sa.Column('data_source_url', sa.String(), nullable=True))
    op.add_column('sites', sa.Column('data_source_notes', sa.Text(), nullable=True))
    op.add_column('sites', sa.Column('data_source_url', sa.String(), nullable=True))
    op.add_column('taxa', sa.Column('data_source_notes', sa.Text(), nullable=True))
    op.add_column('taxa', sa.Column('data_source_url', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('taxa', 'data_source_url')
    op.drop_column('taxa', 'data_source_notes')
    op.drop_column('sites', 'data_source_url')
    op.drop_column('sites', 'data_source_notes')
    op.drop_column('sections', 'data_source_url')
    op.drop_column('sections', 'data_source_notes')
    op.drop_column('samples', 'data_source_url')
    op.drop_column('samples', 'data_source_notes')
    op.drop_column('holes', 'data_source_url')
    op.drop_column('holes', 'data_source_notes')
    op.drop_column('cores', 'data_source_url')
    op.drop_column('cores', 'data_source_notes')
    op.create_table('samples_v2',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('section_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('aw', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('original_sample_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('top', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bottom', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('top_depth', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bottom_depth', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('principal_lithology_prefix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('principal_lithology_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('principal_lithology_suffix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('minor_lithology_prefix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('minor_lithology_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('minor_lithology_suffix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sampled_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('raw_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
